//If a message is received
function onMessage(protocol, host, port, destination, values) {
	//Message reception
	if((protocol == "midi") && (destination == "cc") && (values.length > 2)) {
		//Control Change ID
		var circleIndex = values[1]-1;
		//Control Change Value
		var ccVal = values[2];

		if(circleIndex < 10) {
			var angle = map(circleIndex, 0, circleMax, 0, TWO_PI);
			moveCircle(circleIndex, {x: circleRadius * cos(angle), y: map(ccVal, 0, 127, -5, 5)});
		}
	}
}


//Setup of the script
function onConfigure() {
	//Name of the script
	title("Rosette");
}
var circleMax = 9;
var circleRadius = 2;

//Creation of the score
function onCreate() {
	//Viewport setup
	run("clear");
	run("registerTexture background 0 0 0 0 ./Tools/background.jpg");
	run("rotate 0 0 0");
	run("center 0 0");
	run("zoom 100");
	
	//Ellipse curves
	for(var circleIndex = 0 ; circleIndex < circleMax ; circleIndex++) {
		var angle = map(circleIndex, 0, circleMax, 0, TWO_PI);
		addCircle(circleIndex, {x: circleRadius * cos(angle), y: circleRadius * sin(angle)});
		moveCircle(circleIndex, {x: circleRadius * cos(angle), y: circleRadius * sin(angle)});
	}
}

//Custom function
function addCircle(circleIndex, center) {
	var percent = circleIndex / circleMax;

	run("add curve        " + (1000 + circleIndex));
	run("setGroup         current lines");
	run("setPos           current " + center.x + " " + center.y + " 0");
	run("setPointsEllipse current " + circleRadius + " " + circleRadius);
	run("setColorHue      current " + rangeMid(percent, 178, 200, 178) + " 255 200 255");
	run("setSize          current 0.5");

	run("add cursor       " + circleIndex);
	run("setGroup         current values" + circleIndex);
	run("setCurve         current lastCurve");
	run("setSpeed         current " + (1 + percent * 2));
	run("setBoundsSource  current -7 7 7 -7");
	run("setBoundsTarget  current 0 127 127 0");
	run("setColorHue      current " + range(percent, 20, 44) + " 255 230 255");
	run("setWidth         current " + (2 - 1.5 * percent));
	run("setSize          current 1.5");
	run("setPattern       current 0 0 1");
	run("setMessage       current 20, midi://midi_out/cc 0 " + circleIndex + " cursor_value_y");
//	run("setMessage       current 20, midi://midi_out/cc 1 " + circleIndex + " cursor_value_x");

/*
	run("add trigger      " + (2000 + circleIndex));
	run("setGroup         current triggers");
	run("setPos           current " + center.x + " " + center.y + " 0");
	run("setSize          current 0.5");
	run("setColor         current 170 180 190 255");
*/
}

function moveCircle(circleIndex, center) {
	run("setPos " + (1000 + parseInt(circleIndex)) + " " + center.x + " " + center.y + " 0");
}

/*
    IanniX — a graphical real-time open-source sequencer for digital art
    Copyright (C) 2010-2012 — IanniX Association

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

